{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { CFG_URLAPI } from '../app.config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let produtoModeloServico = /*#__PURE__*/(() => {\n  class produtoModeloServico {\n    constructor(http) {\n      this.http = http;\n      this.ProdutoModeloUrl = CFG_URLAPI.ProdutoModeloUrl;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json; charset=UTF-8',\n          'Access-Control-Allow-Origin': '*'\n        }),\n        params: new HttpParams()\n      };\n    }\n\n    doGetProdutosModelo() {\n      return this.http.get(this.ProdutoModeloUrl + 'doObterTodos');\n    }\n\n    doAdicionar(_entity) {\n      return this.http.post(this.ProdutoModeloUrl + 'doAdicionar', _entity, this.httpOptions);\n    }\n\n    doAtualizar(_entity) {\n      return this.http.put(this.ProdutoModeloUrl + 'doAtualizar', _entity, this.httpOptions);\n    }\n\n    doApagar(_entity) {\n      let _params = new HttpParams();\n\n      _params = _params.append('id', _entity.id.toString());\n      this.httpOptions.params = _params;\n      return this.http.delete(this.ProdutoModeloUrl + 'doApagar', this.httpOptions);\n    }\n\n    processError(err) {\n      let message = '';\n\n      if (err.error instanceof ErrorEvent) {\n        message = err.error.message;\n      } else {\n        message = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n      }\n\n      console.log(message);\n      return throwError(message);\n    }\n\n    doEncodeBase64(strImage) {\n      let encodedData = btoa(strImage);\n      console.log('image 64', encodedData);\n      return encodedData;\n    }\n\n    doDecodeBase64(strImage) {\n      let decodeData = atob(strImage);\n      console.log('desconvertido ', decodeData);\n      return decodeData;\n    }\n\n    previewFile(event) {\n      let input = event.target;\n      console.log('input ', input);\n      let preview = document.querySelector('img');\n      let file = document.querySelector('input[type=file]');\n      let reader = new FileReader();\n      let arquivo = input.files[0];\n      console.log('image lida', reader, arquivo);\n      reader.addEventListener(\"load\", function () {\n        // convert image file to base64 string\n        //preview.src = reader.result;\n        console.log('converter base 64', reader.result);\n      }, false);\n\n      if (arquivo) {\n        console.log('converter base 64', reader.readAsDataURL(arquivo));\n        reader.readAsDataURL(arquivo);\n      }\n    }\n\n  }\n\n  produtoModeloServico.ɵfac = function produtoModeloServico_Factory(t) {\n    return new (t || produtoModeloServico)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  produtoModeloServico.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: produtoModeloServico,\n    factory: produtoModeloServico.ɵfac,\n    providedIn: 'root'\n  });\n  return produtoModeloServico;\n})();","map":null,"metadata":{},"sourceType":"module"}