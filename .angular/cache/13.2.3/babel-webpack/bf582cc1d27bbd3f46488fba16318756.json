{"ast":null,"code":"import { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { CFG_URLAPI } from \"../app.config\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let parceiroServico = /*#__PURE__*/(() => {\n  class parceiroServico {\n    constructor(http) {\n      this.http = http;\n      this.ParceiroUrl = CFG_URLAPI.ParceiroUrl;\n      this.PesquisasUrl = CFG_URLAPI.PesquisasUrl;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json; charset=UTF-8',\n          'Access-Control-Allow-Origin': '*'\n        }),\n        params: new HttpParams()\n      };\n    }\n\n    doGetSexo() {\n      return this.http.get(this.PesquisasUrl + 'doObterSexos');\n    }\n\n    doGetParceiros() {\n      return this.http.get(this.ParceiroUrl + 'doObterTodos');\n    }\n\n    doAdicionar(_entity) {\n      return this.http.post(this.ParceiroUrl + 'doAdicionar', _entity, this.httpOptions);\n    }\n\n    doAtualizar(_entity) {\n      return this.http.put(this.ParceiroUrl + 'doAtualizar', _entity, this.httpOptions);\n    }\n\n    doApagar(_entity) {\n      let _params = new HttpParams();\n\n      _params = _params.append('id', _entity.id.toString());\n      this.httpOptions.params = _params;\n      return this.http.delete(this.ParceiroUrl + 'doApagar', this.httpOptions);\n    }\n\n    processError(err) {\n      let message = '';\n\n      if (err.error instanceof ErrorEvent) {\n        message = err.error.message;\n      } else {\n        message = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n      }\n\n      console.log(message);\n      return throwError(message);\n    }\n\n  }\n\n  parceiroServico.ɵfac = function parceiroServico_Factory(t) {\n    return new (t || parceiroServico)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  parceiroServico.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: parceiroServico,\n    factory: parceiroServico.ɵfac\n  });\n  return parceiroServico;\n})();","map":null,"metadata":{},"sourceType":"module"}