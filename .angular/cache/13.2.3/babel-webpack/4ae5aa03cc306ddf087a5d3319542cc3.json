{"ast":null,"code":"import { HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { CFG_URLAPI } from \"../app.config\";\nimport { FinanceiroBaixaEntity } from \"../entidades/FinanceiroBaixaEntity\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let financeiroServico = /*#__PURE__*/(() => {\n  class financeiroServico {\n    constructor(http) {\n      this.http = http;\n      this.FinanceiroUrl = CFG_URLAPI.FinanceiroUrl;\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json; charset=UTF-8',\n          'Access-Control-Allow-Origin': '*'\n        }),\n        params: new HttpParams()\n      };\n    }\n\n    doGetFinanceiros() {\n      return this.http.get(this.FinanceiroUrl + 'doObterTodos');\n    }\n\n    doAdicionar(_entity) {\n      return this.http.post(this.FinanceiroUrl + 'doAdicionar', _entity, this.httpOptions);\n    }\n\n    doAtualizar(_entity) {\n      return this.http.put(this.FinanceiroUrl + 'doAtualizar', _entity, this.httpOptions);\n    }\n\n    doApagar(_entity) {\n      let _params = new HttpParams();\n\n      _params = _params.append('id', _entity.id.toString());\n      this.httpOptions.params = _params;\n      return this.http.delete(this.FinanceiroUrl + 'doApagar', this.httpOptions);\n    }\n\n    doBaixar(_entity) {\n      let _financeiroBaixa = new FinanceiroBaixaEntity(_entity.id, _entity.dtBaixa);\n\n      return this.http.put(this.FinanceiroUrl + 'doEstornarBaixa', _financeiroBaixa, this.httpOptions);\n    }\n\n    doEstornarBaixa(_entity) {\n      let _params = new HttpParams();\n\n      _params = _params.append('id', _entity.id.toString());\n      this.httpOptions.params = _params;\n      return this.http.delete(this.FinanceiroUrl + 'doEstornarBaixa', this.httpOptions);\n    }\n\n    doGetFinanceirosMes(ano) {\n      let _params = new HttpParams();\n\n      _params = _params.append('ano', ano.toString());\n      this.httpOptions.params = _params;\n      return this.http.get(this.FinanceiroUrl + 'doObterFinanceirosMes', this.httpOptions);\n    }\n\n  }\n\n  financeiroServico.ɵfac = function financeiroServico_Factory(t) {\n    return new (t || financeiroServico)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  financeiroServico.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: financeiroServico,\n    factory: financeiroServico.ɵfac\n  });\n  return financeiroServico;\n})();","map":null,"metadata":{},"sourceType":"module"}